describe("Map", {
  it("construction and access", {
    let m = map(1 => "one", 2 => "two", 3 => "three")

    assert.equal(m.at(1), some("one"))
    assert.equal(m.at(2), some("two"))
    assert.equal(m.at(7), none)

    assert.equal(m.get(3), "three")
  })

  it("mutation", {
    let m = map("a" => "x")
    m.put("b", "y")
    assert.equal(m.at("b"), some("y"))
  })

  it("==", {
    let m = map("a" => 1)

    assert.isTrue(m == map("a" => 1))
    assert.isFalse(m == map("a" => 1, "b" => 2))
    assert.isFalse(m == map("a" => 2))
    assert.isFalse(m == map())

    assert.isTrue(map() == map())
  })

  it("copy()", {
    let original = map("a" => list(5))
    let dup = original.copy()
    assert.different(original, dup)

    original.get("a") << 4
    original.put("b", list(10))

    dup.get("a") << 6
    dup.put("b", list(20))

    assert.equal(original, map("a" => list(5, 4), "b" => list(10)))
    assert.equal(dup, map("a" => list(5, 6), "b" => list(20)))
  })
})
